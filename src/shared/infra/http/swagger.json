{
  "openapi": "3.0.0",
  "info": {
    "title": "Optical Labaratory - API",
    "description": "Documentação API Optical Labaratory",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3333/"
    }
  ],
  "paths": {
    "/orderProducts": {
      "get": {
        "tags": [
          "OrderProducts"
        ],
        "description": "List order products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "OrderProducts"
        ],
        "description": "Create order product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderProduct"
              },
              "example": {
                "order_id": 1,
                "product_id": 1,
                "initial_price": "100",
                "single_discount": "100",
                "total_discount": "100",
                "charged_value": "100",
                "cashback_value": "100",
                "taxes": "100",
                "quantity": 1,
                "wrap": true,
                "released": true,
                "cfop": 1
              }
            }
          }
        }
      }
    },
    "/orderProducts/view/{id}": {
      "get": {
        "tags": [
          "OrderProducts"
        ],
        "description": "View order product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orderProducts/update/{id}": {
      "put": {
        "tags": [
          "OrderProducts"
        ],
        "description": "Update order product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderProduct"
              },
              "example": {
                "order_id": 1,
                "product_id": 1,
                "initial_price": "100",
                "single_discount": "100",
                "total_discount": "100",
                "charged_value": "100",
                "cashback_value": "100",
                "taxes": "100",
                "quantity": 1,
                "wrap": true,
                "released": true,
                "cfop": 1
              }
            }
          }
        }
      }
    },
    "/orderProducts/{id}": {
      "delete": {
        "tags": [
          "OrderProducts"
        ],
        "description": "Delete order product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "List orders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Create order ",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              },
              "example": {
                "os": "test_os",
                "client_id": 1,
                "products_value": "100",
                "service_value": "100",
                "lenses_value": "100",
                "charged_value": "100",
                "credit_value": "100",
                "shipping_method": "credit",
                "shipping_value": "100",
                "shipping_time": "90",
                "payment_method": "card",
                "payment_date": "2022-04-05",
                "installments": 1,
                "status": 1,
                "type": "V",
                "profit": "N",
                "note": "test_note",
                "user_id": 1
              }
            }
          }
        }
      }
    },
    "/orders/view/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "View order ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/update/{id}": {
      "put": {
        "tags": [
          "Order"
        ],
        "description": "Update order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              },
              "example": {
                "os": "test_os",
                "client_id": 1,
                "products_value": "100",
                "service_value": "100",
                "lenses_value": "100",
                "charged_value": "100",
                "credit_value": "100",
                "shipping_method": "credit",
                "shipping_value": "100",
                "shipping_time": "90",
                "payment_method": "card",
                "payment_date": "2022-04-05",
                "installments": 1,
                "status": 1,
                "type": "V",
                "profit": "N",
                "note": "test_update_note",
                "user_id": 1
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Delete order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/bankAccounts": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "List all bank accounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "BankAccount"
        ],
        "description": "Create bank account",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        }
      }
    },
    "/financial/bankAccounts/view/{id}": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "View bank account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found bank account"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/bankAccounts/update/{id}": {
      "put": {
        "tags": [
          "BankAccount"
        ],
        "description": "Update bank account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        }
      }
    },
    "/financial/bankAccounts/{id}": {
      "delete": {
        "tags": [
          "BankAccount"
        ],
        "description": "Delete bank account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found bank account"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/credits": {
      "get": {
        "tags": [
          "Credit"
        ],
        "description": "List all credits",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Credit"
        ],
        "description": "Create credit",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credit"
              }
            }
          }
        }
      }
    },
    "/financial/credits/view/{id}": {
      "get": {
        "tags": [
          "Credit"
        ],
        "description": "View credit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found credit"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/credits/update/{id}": {
      "put": {
        "tags": [
          "Credit"
        ],
        "description": "Update credit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credit"
              }
            }
          }
        }
      }
    },
    "/financial/credits/{id}": {
      "delete": {
        "tags": [
          "Credit"
        ],
        "description": "Delete credit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found credit"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMoviments": {
      "get": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "List all financialMoviments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "Create financialMoviment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMoviment"
              }
            }
          }
        }
      }
    },
    "/financial/financialMoviments/view/{id}": {
      "get": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "View financialMoviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMoviment"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMoviments/update/{id}": {
      "put": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "Update financialMoviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMoviment"
              }
            }
          }
        }
      }
    },
    "/financial/financialMoviments/{id}": {
      "delete": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "Delete financialMoviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMoviment"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsOrders": {
      "get": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "List all financialMovimentsOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "Create financialMovimentOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentOrder"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsOrders/view/{id}": {
      "get": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "View financialMovimentOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentOrder"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsOrders/update/{id}": {
      "put": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "Update financialMovimentOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentOrder"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsOrders/{id}": {
      "delete": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "Delete financialMovimentOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentOrder"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsTypes": {
      "get": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "List all financialMovimentsTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "Create financialMovimentType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentType"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsTypes/view/{id}": {
      "get": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "View financialMovimentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentType"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsTypes/update/{id}": {
      "put": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "Update financialMovimentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentType"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsTypes/{id}": {
      "delete": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "Delete financialMovimentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentType"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsTypesGroups": {
      "get": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "List all financialMovimentsTypesGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "Create financialMovimentTypeGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentTypeGroup"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsTypesGroups/view/{id}": {
      "get": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "View financialMovimentTypeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentTypeGroup"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsTypesGroups/update/{id}": {
      "put": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "Update financialMovimentTypeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentTypeGroup"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsTypesGroups/{id}": {
      "delete": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "Delete financialMovimentTypeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentTypeGroup"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/fiscalSettings": {
      "get": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "List all fiscalSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "Create fiscalSetting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiscalSetting"
              }
            }
          }
        }
      }
    },
    "/financial/fiscalSettings/view/{id}": {
      "get": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "View fiscalSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found fiscalSetting"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/fiscalSettings/update/{id}": {
      "put": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "Update fiscalSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiscalSetting"
              }
            }
          }
        }
      }
    },
    "/financial/fiscalSettings/{id}": {
      "delete": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "Delete fiscalSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found fiscalSetting"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "description": "Create session",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions/createuser": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "description": "Create user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "test"
                  },
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  },
                  "email": {
                    "type": "string",
                    "example": "test@test.com"
                  },
                  "active": {
                    "type": "boolean",
                    "example": true
                  },
                  "old_role_id": {
                    "type": "number",
                    "example": 1
                  },
                  "old_user_id": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "role_id": 1,
                    "name": "Test",
                    "username": "Test",
                    "email": "test@test.com",
                    "password": "teste",
                    "active": true,
                    "remote_access": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/view/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "View user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/update/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "role_id": 1,
                    "name": "Test_update",
                    "username": "Test_update",
                    "email": "test_update@test.com",
                    "password": "teste",
                    "active": true,
                    "remote_access": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Update avatar user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/roles/": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "List roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "description": "Create role",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test_role"
                  },
                  "description": {
                    "type": "string",
                    "example": "test description role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/roles/view/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "View role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found role"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/roles/update/{id}": {
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "Update role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test_update_role"
                  },
                  "description": {
                    "type": "string",
                    "example": "test update description role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/roles/{id}": {
      "delete": {
        "tags": [
          "Roles"
        ],
        "description": "Delete role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found role"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profile/show": {
      "get": {
        "tags": [
          "Profile"
        ],
        "description": "Show profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profile/": {
      "put": {
        "tags": [
          "Profile"
        ],
        "description": "Update profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test"
                  },
                  "email": {
                    "type": "string",
                    "example": "teste@teste.com"
                  },
                  "old_password": {
                    "type": "string",
                    "example": "test_old"
                  },
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/permissions": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "description": "Create permission",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test"
                  },
                  "description": {
                    "type": "string",
                    "example": "test description"
                  },
                  "method": {
                    "type": "string",
                    "example": "GET"
                  },
                  "base_url": {
                    "type": "string",
                    "example": "test"
                  },
                  "path": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Permissions"
        ],
        "description": "List permissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/permissions/view/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "description": "View permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found permission"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/permissions/update/{id}": {
      "put": {
        "tags": [
          "Permissions"
        ],
        "description": "Update permision",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test_update"
                  },
                  "description": {
                    "type": "string",
                    "example": "test update description"
                  },
                  "base_url": {
                    "type": "string",
                    "example": "test_update"
                  },
                  "method": {
                    "type": "string",
                    "example": "POST"
                  },
                  "path": {
                    "type": "string",
                    "example": "test_update"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{id}": {
      "delete": {
        "tags": [
          "Permissions"
        ],
        "description": "Delete permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found permission"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/checkPermission": {
      "post": {
        "tags": [
          "CheckPermission"
        ],
        "description": "Check if user has permission",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "example": "GET"
                  },
                  "originalUrl": {
                    "type": "string",
                    "example": "/users"
                  },
                  "role_id": {
                    "type": "number",
                    "example": 1
                  },
                  "user_id": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/menus": {
      "get": {
        "tags": [
          "Menus"
        ],
        "description": "List menus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Menus"
        ],
        "description": "Create menu",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test"
                  },
                  "parent_id": {
                    "type": "number",
                    "example": 1
                  },
                  "controller": {
                    "type": "string",
                    "example": "test_route"
                  },
                  "action": {
                    "type": "string",
                    "example": "test_path"
                  },
                  "method": {
                    "type": "string",
                    "example": "POST"
                  },
                  "type": {
                    "type": "string",
                    "example": "front or cake"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/menus/view/{id}": {
      "get": {
        "tags": [
          "Menus"
        ],
        "description": "View menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found menu"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/menus/update/{id}": {
      "put": {
        "tags": [
          "Menus"
        ],
        "description": "Update menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test_update"
                  },
                  "parent_id": {
                    "type": "number",
                    "example": 1
                  },
                  "controller": {
                    "type": "string",
                    "example": "test_update_route"
                  },
                  "action": {
                    "type": "string",
                    "example": "test_update_path"
                  },
                  "method": {
                    "type": "string",
                    "example": "POST"
                  },
                  "type": {
                    "type": "string",
                    "example": "front or cake"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/menus/{id}": {
      "delete": {
        "tags": [
          "Menus"
        ],
        "description": "Delete menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found menu"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/password/forgot": {
      "post": {
        "tags": [
          "Password"
        ],
        "description": "Forgot password",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@test.com"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/password/reset": {
      "post": {
        "tags": [
          "Password"
        ],
        "description": "Update password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "test_token_uuid"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "name": "authorization",
        "scheme": "bearer",
        "in": "header",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "name": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "username": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "email": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "password": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "active": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "remote_acess": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      },
      "OrderProduct": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "product_id": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "initial_price": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "single_discount": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "total_discount": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "charged_value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "cashback_value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "taxes": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "quantity": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "wrap": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "boolean"
              }
            }
          },
          "released": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "boolean"
              }
            }
          },
          "cfop": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "os": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "client_id": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "products_value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "service_value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "lenses_value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "charged_value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "credit_value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "shipping_method": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "shipping_value": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "shipping_time": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "payment_method": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "payment_date": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "Date"
              }
            }
          },
          "installments": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "status": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "type": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "profit": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "note": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "user_id": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "registry": {
            "type": "string",
            "example": "string"
          },
          "agency": {
            "type": "string",
            "example": "string"
          },
          "account": {
            "type": "string",
            "example": "string"
          },
          "account_dv": {
            "type": "number",
            "example": 1
          },
          "client_code": {
            "type": "number",
            "example": 1
          },
          "assignor_code": {
            "type": "number",
            "example": 1
          },
          "assignor_code_dv": {
            "type": "number",
            "example": 1
          },
          "document": {
            "type": "string",
            "example": "string"
          },
          "transmission_code": {
            "type": "string",
            "example": "string"
          },
          "currency": {
            "type": "string",
            "example": "string"
          },
          "invoice_value": {
            "type": "number",
            "example": 1
          },
          "delay_fines": {
            "type": "number",
            "example": 1
          },
          "delay_taxes": {
            "type": "number",
            "example": 1
          },
          "message_1": {
            "type": "string",
            "example": "string"
          },
          "message_2": {
            "type": "string",
            "example": "string"
          },
          "message_3": {
            "type": "string",
            "example": "string"
          },
          "instruction_1": {
            "type": "string",
            "example": "string"
          },
          "instruction_2": {
            "type": "string",
            "example": "string"
          },
          "instruction_3": {
            "type": "string",
            "example": "string"
          },
          "user_id": {
            "type": "number",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "string"
          },
          "active": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "Credit": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "number",
            "example": 1
          },
          "order_id": {
            "type": "number",
            "example": 1
          },
          "user_id": {
            "type": "number",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "value": {
            "type": "string",
            "example": "string"
          },
          "date": {
            "type": "string",
            "example": "10/05/2022"
          },
          "used": {
            "type": "string",
            "example": "string"
          },
          "used_at": {
            "type": "string",
            "example": "10/05/2022"
          }
        }
      },
      "FinancialMoviment": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "number",
            "example": 1
          },
          "provider_id": {
            "type": "number",
            "example": 1
          },
          "financial_moviment_type_id": {
            "type": "number",
            "example": 1
          },
          "bank_account_id": {
            "type": "number",
            "example": 1
          },
          "shipment_file_id": {
            "type": "number",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "due_date": {
            "type": "string",
            "example": "10/05/2022"
          },
          "value": {
            "type": "string",
            "example": "string"
          },
          "products_value": {
            "type": "string",
            "example": "string"
          },
          "services_value": {
            "type": "string",
            "example": "string"
          },
          "credits_value": {
            "type": "string",
            "example": "string"
          },
          "fees_fines_value": {
            "type": "string",
            "example": "string"
          },
          "nf_code": {
            "type": "string",
            "example": "string"
          },
          "nf_receipt": {
            "type": "string",
            "example": "string"
          },
          "nf_receipt_date": {
            "type": "string",
            "example": "10/05/2022"
          },
          "nf_issue_date": {
            "type": "string",
            "example": "10/05/2022"
          },
          "nf_cStat_receipt": {
            "type": "string",
            "example": "string"
          },
          "nf_xmotivo_receipt": {
            "type": "string",
            "example": "string"
          },
          "nf_number": {
            "type": "number",
            "example": 1
          },
          "nf_key": {
            "type": "string",
            "example": "string"
          },
          "nf_protocoll": {
            "type": "string",
            "example": "string"
          },
          "nf_protocoll_date": {
            "type": "string",
            "example": "string"
          },
          "nf_protocoll_menssage": {
            "type": "string",
            "example": "string"
          },
          "nf_year_month": {
            "type": "string",
            "example": "string"
          },
          "nf_lot": {
            "type": "string",
            "example": "string"
          },
          "nf_canceled": {
            "type": "string",
            "example": "string"
          },
          "nf_canceled_protocoll": {
            "type": "string",
            "example": "string"
          },
          "nf_canceled_date": {
            "type": "string",
            "example": "string"
          },
          "nf_canceled_reason": {
            "type": "string",
            "example": "string"
          },
          "nf_status": {
            "type": "string",
            "example": "string"
          },
          "nfse_number": {
            "type": "string",
            "example": "string"
          },
          "nfse_verification_code": {
            "type": "string",
            "example": "string"
          },
          "nfse_issue_date": {
            "type": "string",
            "example": "10/05/2022"
          },
          "nfse_rps_number": {
            "type": "number",
            "example": 1
          },
          "nfse_canceled": {
            "type": "string",
            "example": "string"
          },
          "nfse_status": {
            "type": "string",
            "example": "string"
          },
          "finished": {
            "type": "string",
            "example": "string"
          },
          "payment_method": {
            "type": "string",
            "example": "string"
          },
          "invoice_status": {
            "type": "string",
            "example": "string"
          },
          "invoice_registered": {
            "type": "string",
            "example": "string"
          },
          "invoice_bank_downloaded": {
            "type": "string",
            "example": "string"
          },
          "operation_type": {
            "type": "string",
            "example": "string"
          },
          "generated_user_id": {
            "type": "number",
            "example": 1
          },
          "downloaded_user_id": {
            "type": "number",
            "example": 1
          },
          "downloaded_at": {
            "type": "string",
            "example": "10/05/2022"
          }
        }
      },
      "FinancialMovimentOrder": {
        "type": "object",
        "properties": {
          "financial_moviment_id": {
            "type": "number",
            "example": 1
          },
          "order_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "FinancialMovimentType": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "number",
            "example": 1
          },
          "financial_moviment_type_group_id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "name"
          }
        }
      },
      "FinancialMovimentTypeGroup": {
        "type": "object",
        "properties": {
          "operation_type": {
            "type": "string",
            "example": "string"
          },
          "active": {
            "type": "number",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "FiscalSetting": {
        "type": "object",
        "properties": {
          "company_name": {
            "type": "string",
            "example": "string"
          },
          "cnpj": {
            "type": "string",
            "example": "string"
          },
          "city_registration": {
            "type": "string",
            "example": "string"
          },
          "state_registration": {
            "type": "string",
            "example": "string"
          },
          "address": {
            "type": "string",
            "example": "string"
          },
          "nfse_env": {
            "type": "boolean",
            "example": false
          },
          "nfse_rps_number": {
            "type": "number",
            "example": 0
          },
          "certified_file": {
            "type": "string",
            "example": "string"
          },
          "certified_validate": {
            "type": "string",
            "example": "10/05/2022"
          },
          "certified_password": {
            "type": "string",
            "example": "string"
          },
          "nf_emission_due": {
            "type": "number",
            "example": 0
          },
          "dir": {
            "type": "number",
            "example": 0
          },
          "invoice_email_copy": {
            "type": "string",
            "example": "string"
          },
          "active": {
            "type": "string",
            "example": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": {
        "type": "http",
        "scheme": "Bearer"
      }
    }
  ]
}