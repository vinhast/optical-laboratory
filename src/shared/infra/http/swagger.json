{
  "openapi": "3.0.0",
  "info": {
    "title": "Optical Labaratory - API",
    "description": "Documentação API Optical Labaratory",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3333/"
    }
  ],
  "paths": {
    "/sessions": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "description": "Create session",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions/createuser": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "description": "Create user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "test"
                  },
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  },
                  "email": {
                    "type": "string",
                    "example": "test@test.com"
                  },
                  "active": {
                    "type": "boolean",
                    "example": true
                  },
                  "old_role_id": {
                    "type": "number",
                    "example": 1
                  },
                  "old_user_id": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "role_id": 1,
                    "name": "Test",
                    "username": "Test",
                    "email": "test@test.com",
                    "password": "teste",
                    "active": true,
                    "remote_access": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/view/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "View user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/update/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "role_id": 1,
                    "name": "Test_update",
                    "username": "Test_update",
                    "email": "test_update@test.com",
                    "password": "teste",
                    "active": true,
                    "remote_access": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Update avatar user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/roles/": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "List roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "description": "Create role",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test_role"
                  },
                  "description": {
                    "type": "string",
                    "example": "test description role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/roles/view/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "View role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found role"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/roles/update/{id}": {
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "Update role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test_update_role"
                  },
                  "description": {
                    "type": "string",
                    "example": "test update description role"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/roles/{id}": {
      "delete": {
        "tags": [
          "Roles"
        ],
        "description": "Delete role",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found role"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profile/show": {
      "get": {
        "tags": [
          "Profile"
        ],
        "description": "Show profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/profile/": {
      "put": {
        "tags": [
          "Profile"
        ],
        "description": "Update profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test"
                  },
                  "email": {
                    "type": "string",
                    "example": "teste@teste.com"
                  },
                  "old_password": {
                    "type": "string",
                    "example": "test_old"
                  },
                  "username": {
                    "type": "string",
                    "example": "test"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/permissions": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "description": "Create permission",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test"
                  },
                  "description": {
                    "type": "string",
                    "example": "test description"
                  },
                  "method": {
                    "type": "string",
                    "example": "GET"
                  },
                  "base_url": {
                    "type": "string",
                    "example": "test"
                  },
                  "path": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Permissions"
        ],
        "description": "List permissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/permissions/view/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "description": "View permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found permission"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/permissions/update/{id}": {
      "put": {
        "tags": [
          "Permissions"
        ],
        "description": "Update permision",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test_update"
                  },
                  "description": {
                    "type": "string",
                    "example": "test update description"
                  },
                  "base_url": {
                    "type": "string",
                    "example": "test_update"
                  },
                  "method": {
                    "type": "string",
                    "example": "POST"
                  },
                  "path": {
                    "type": "string",
                    "example": "test_update"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{id}": {
      "delete": {
        "tags": [
          "Permissions"
        ],
        "description": "Delete permission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found permission"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/salesTables/": {
      "get": {
        "tags": [
          "SalesTables"
        ],
        "description": "List salesTables",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "SalesTables"
        ],
        "description": "Create saleTable",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleTable"
              }
            }
          }
        }
      }
    },
    "/users/salesTables/view/{id}": {
      "get": {
        "tags": [
          "SalesTables"
        ],
        "description": "View saleTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found saleTable"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/salesTables/update/{id}": {
      "put": {
        "tags": [
          "SalesTables"
        ],
        "description": "Update saleTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleTable"
              }
            }
          }
        }
      }
    },
    "/users/salesTables/{id}": {
      "delete": {
        "tags": [
          "SalesTables"
        ],
        "description": "Delete saleTable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found saleTable"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/salesTablesPrices/": {
      "get": {
        "tags": [
          "SalesTablesPrices"
        ],
        "description": "List salesTablesPrices",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "SalesTablesPrices"
        ],
        "description": "Create saleTablePrice",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleTablePrice"
              }
            }
          }
        }
      }
    },
    "/users/salesTablesPrices/view/{id}": {
      "get": {
        "tags": [
          "SalesTablesPrices"
        ],
        "description": "View saleTablePrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found saleTablePrice"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/salesTablesPrices/update/{id}": {
      "put": {
        "tags": [
          "SalesTablesPrices"
        ],
        "description": "Update saleTablePrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleTablePrice"
              }
            }
          }
        }
      }
    },
    "/users/salesTablesPrices/{id}": {
      "delete": {
        "tags": [
          "SalesTablesPrices"
        ],
        "description": "Delete saleTablePrice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found saleTablePrice"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/clientsApplicationsUsers": {
      "get": {
        "tags": [
          "ClientsApplicationsUsers"
        ],
        "description": "List clients applications users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ClientsApplicationsUsers"
        ],
        "description": "Create client application user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientApplicationUser"
              }
            }
          }
        }
      }
    },
    "/users/clientsApplicationsUsers/view/{id}": {
      "get": {
        "tags": [
          "ClientsApplicationsUsers"
        ],
        "description": "View client application user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/clientsApplicationsUsers/update/{id}": {
      "put": {
        "tags": [
          "ClientsApplicationsUsers"
        ],
        "description": "Update client application user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientApplicationUser"
              }
            }
          }
        }
      }
    },
    "/users/clientsApplicationsUsers/{id}": {
      "delete": {
        "tags": [
          "ClientsApplicationsUsers"
        ],
        "description": "Delete client application user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/checkPermission": {
      "post": {
        "tags": [
          "CheckPermission"
        ],
        "description": "Check if user has permission",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "example": "GET"
                  },
                  "originalUrl": {
                    "type": "string",
                    "example": "/users"
                  },
                  "role_id": {
                    "type": "number",
                    "example": 1
                  },
                  "user_id": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "/menus": {
      "get": {
        "tags": [
          "Menus"
        ],
        "description": "List menus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Menus"
        ],
        "description": "Create menu",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test"
                  },
                  "parent_id": {
                    "type": "number",
                    "example": 1
                  },
                  "controller": {
                    "type": "string",
                    "example": "test_route"
                  },
                  "action": {
                    "type": "string",
                    "example": "test_path"
                  },
                  "method": {
                    "type": "string",
                    "example": "POST"
                  },
                  "icon": {
                    "type": "string",
                    "example": "fa fa-users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/menus/view/{id}": {
      "get": {
        "tags": [
          "Menus"
        ],
        "description": "View menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found menu"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/menus/update/{id}": {
      "put": {
        "tags": [
          "Menus"
        ],
        "description": "Update menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "test_update"
                  },
                  "parent_id": {
                    "type": "number",
                    "example": 1
                  },
                  "controller": {
                    "type": "string",
                    "example": "test_update_route"
                  },
                  "action": {
                    "type": "string",
                    "example": "test_update_path"
                  },
                  "method": {
                    "type": "string",
                    "example": "POST"
                  },
                  "icon": {
                    "type": "string",
                    "example": "fa fa-users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/menus/{id}": {
      "delete": {
        "tags": [
          "Menus"
        ],
        "description": "Delete menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found menu"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/password/forgot": {
      "post": {
        "tags": [
          "Password"
        ],
        "description": "Forgot password",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@test.com"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/password/reset": {
      "post": {
        "tags": [
          "Password"
        ],
        "description": "Update password",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "test_token_uuid"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  },
                  "password_confirmation": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cache": {
      "get": {
        "tags": [
          "Cache"
        ],
        "description": "List cache keys",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/cache/{key}": {
      "delete": {
        "tags": [
          "Cache"
        ],
        "description": "Delete key cache",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found key"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/orderProducts": {
      "get": {
        "tags": [
          "OrderProduct"
        ],
        "description": "List order products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "OrderProduct"
        ],
        "description": "Create order product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderProduct"
              }
            }
          }
        }
      }
    },
    "/commercial/orderProducts/view/{id}": {
      "get": {
        "tags": [
          "OrderProduct"
        ],
        "description": "View order product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/orderProducts/update/{id}": {
      "put": {
        "tags": [
          "OrderProduct"
        ],
        "description": "Update order product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderProduct"
              }
            }
          }
        }
      }
    },
    "/commercial/orderProducts/{id}": {
      "delete": {
        "tags": [
          "OrderProduct"
        ],
        "description": "Delete order product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "List orders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Create order ",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        }
      }
    },
    "/commercial/orders/view/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "View order ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/orders/update/{id}": {
      "put": {
        "tags": [
          "Order"
        ],
        "description": "Update order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        }
      }
    },
    "/commercial/orders/{id}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Delete order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/providers": {
      "get": {
        "tags": [
          "Provider"
        ],
        "description": "List Providers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Provider"
        ],
        "description": "Create Provider ",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provider"
              }
            }
          }
        }
      }
    },
    "/commercial/providers/view/{id}": {
      "get": {
        "tags": [
          "Provider"
        ],
        "description": "View Provider ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/providers/update/{id}": {
      "put": {
        "tags": [
          "Provider"
        ],
        "description": "Update Provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Provider"
              }
            }
          }
        }
      }
    },
    "/commercial/providers/{id}": {
      "delete": {
        "tags": [
          "Provider"
        ],
        "description": "Delete Provider",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/clients": {
      "get": {
        "tags": [
          "Client"
        ],
        "description": "List clients",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Client"
        ],
        "description": "Create client",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        }
      }
    },
    "/commercial/clients/view/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "description": "View client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/clients/update/{id}": {
      "put": {
        "tags": [
          "Client"
        ],
        "description": "Update client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        }
      }
    },
    "/commercial/clients/{id}": {
      "delete": {
        "tags": [
          "Client"
        ],
        "description": "Delete client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/downloads": {
      "get": {
        "tags": [
          "Download"
        ],
        "description": "List Downloads",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Download"
        ],
        "description": "Create Download",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Download"
              }
            }
          }
        }
      }
    },
    "/commercial/downloads/view/{id}": {
      "get": {
        "tags": [
          "Download"
        ],
        "description": "View Download",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/commercial/downloads/update/{id}": {
      "put": {
        "tags": [
          "Download"
        ],
        "description": "Update Download",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Download"
              }
            }
          }
        }
      }
    },
    "/commercial/downloads/{id}": {
      "delete": {
        "tags": [
          "Download"
        ],
        "description": "Delete Download",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/warehouse/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "List products",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Create product",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        }
      }
    },
    "/warehouse/products/view/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "View product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/warehouse/products/update/{id}": {
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Update product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        }
      }
    },
    "/warehouse/products/{id}": {
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Delete product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/warehouse/productCategories": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "description": "List categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ProductCategory"
        ],
        "description": "Create category",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          }
        }
      }
    },
    "/warehouse/productCategories/view/{id}": {
      "get": {
        "tags": [
          "ProductCategory"
        ],
        "description": "View category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/warehouse/productCategories/update/{id}": {
      "put": {
        "tags": [
          "ProductCategory"
        ],
        "description": "Update category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategory"
              }
            }
          }
        }
      }
    },
    "/warehouse/productCategories/{id}": {
      "delete": {
        "tags": [
          "ProductCategory"
        ],
        "description": "Delete category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/warehouse/stockMoviments": {
      "get": {
        "tags": [
          "StockMoviment"
        ],
        "description": "List stock moviments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "StockMoviment"
        ],
        "description": "Create stock moviment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockMoviment"
              }
            }
          }
        }
      }
    },
    "/warehouse/stockMoviments/view/{id}": {
      "get": {
        "tags": [
          "StockMoviment"
        ],
        "description": "View stock moviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/warehouse/stockMoviments/update/{id}": {
      "put": {
        "tags": [
          "StockMoviment"
        ],
        "description": "Update stock moviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockMoviment"
              }
            }
          }
        }
      }
    },
    "/warehouse/stockMoviments/{id}": {
      "delete": {
        "tags": [
          "StockMoviment"
        ],
        "description": "Delete stock moviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/warehouse/unitTypes": {
      "get": {
        "tags": [
          "UnitType"
        ],
        "description": "List unit types",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "UnitType"
        ],
        "description": "Create unit type",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitType"
              }
            }
          }
        }
      }
    },
    "/warehouse/unitTypes/view/{id}": {
      "get": {
        "tags": [
          "UnitType"
        ],
        "description": "View unit type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/warehouse/unitTypes/update/{id}": {
      "put": {
        "tags": [
          "UnitType"
        ],
        "description": "Update unit type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitType"
              }
            }
          }
        }
      }
    },
    "/warehouse/unitTypes/{id}": {
      "delete": {
        "tags": [
          "UnitType"
        ],
        "description": "Delete unit type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/bankAccounts": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "List all bank accounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "BankAccount"
        ],
        "description": "Create bank account",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        }
      }
    },
    "/financial/bankAccounts/view/{id}": {
      "get": {
        "tags": [
          "BankAccount"
        ],
        "description": "View bank account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found bank account"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/bankAccounts/update/{id}": {
      "put": {
        "tags": [
          "BankAccount"
        ],
        "description": "Update bank account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankAccount"
              }
            }
          }
        }
      }
    },
    "/financial/bankAccounts/{id}": {
      "delete": {
        "tags": [
          "BankAccount"
        ],
        "description": "Delete bank account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found bank account"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/credits": {
      "get": {
        "tags": [
          "Credit"
        ],
        "description": "List all credits",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Credit"
        ],
        "description": "Create credit",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credit"
              }
            }
          }
        }
      }
    },
    "/financial/credits/view/{id}": {
      "get": {
        "tags": [
          "Credit"
        ],
        "description": "View credit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found credit"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/credits/update/{id}": {
      "put": {
        "tags": [
          "Credit"
        ],
        "description": "Update credit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credit"
              }
            }
          }
        }
      }
    },
    "/financial/credits/{id}": {
      "delete": {
        "tags": [
          "Credit"
        ],
        "description": "Delete credit",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found credit"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMoviments": {
      "get": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "List all financialMoviments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "Create financialMoviment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMoviment"
              }
            }
          }
        }
      }
    },
    "/financial/financialMoviments/view/{id}": {
      "get": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "View financialMoviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMoviment"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMoviments/update": {
      "put": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "Update many financial moviments same time",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentsUpdate"
              }
            }
          }
        }
      }
    },
    "/financial/financialMoviments/update/{id}": {
      "put": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "Update financialMoviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMoviment"
              }
            }
          }
        }
      }
    },
    "/financial/financialMoviments/{id}": {
      "delete": {
        "tags": [
          "FinancialMoviment"
        ],
        "description": "Delete financialMoviment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMoviment"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsOrders": {
      "get": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "List all financialMovimentsOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "Create financialMovimentOrder",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentOrder"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsOrders/view/{id}": {
      "get": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "View financialMovimentOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentOrder"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsOrders/update/{id}": {
      "put": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "Update financialMovimentOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentOrder"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsOrders/{id}": {
      "delete": {
        "tags": [
          "FinancialMovimentOrder"
        ],
        "description": "Delete financialMovimentOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentOrder"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsTypes": {
      "get": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "List all financialMovimentsTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "Create financialMovimentType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentType"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsTypes/view/{id}": {
      "get": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "View financialMovimentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentType"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsTypes/update/{id}": {
      "put": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "Update financialMovimentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentType"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsTypes/{id}": {
      "delete": {
        "tags": [
          "FinancialMovimentType"
        ],
        "description": "Delete financialMovimentType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentType"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsTypesGroups": {
      "get": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "List all financialMovimentsTypesGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "Create financialMovimentTypeGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentTypeGroup"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsTypesGroups/view/{id}": {
      "get": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "View financialMovimentTypeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentTypeGroup"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/financialMovimentsTypesGroups/update/{id}": {
      "put": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "Update financialMovimentTypeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialMovimentTypeGroup"
              }
            }
          }
        }
      }
    },
    "/financial/financialMovimentsTypesGroups/{id}": {
      "delete": {
        "tags": [
          "FinancialMovimentTypeGroup"
        ],
        "description": "Delete financialMovimentTypeGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financialMovimentTypeGroup"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/fiscalSettings": {
      "get": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "List all fiscalSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "Create fiscalSetting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiscalSetting"
              }
            }
          }
        }
      }
    },
    "/financial/fiscalSettings/view/{id}": {
      "get": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "View fiscalSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found fiscalSetting"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/fiscalSettings/update/{id}": {
      "put": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "Update fiscalSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FiscalSetting"
              }
            }
          }
        }
      }
    },
    "/financial/fiscalSettings/{id}": {
      "delete": {
        "tags": [
          "FiscalSetting"
        ],
        "description": "Delete fiscalSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found fiscalSetting"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/categories": {
      "get": {
        "tags": [
          "FinancialCategory"
        ],
        "description": "List financial categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "FinancialCategory"
        ],
        "description": "Create financial category",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Financial category"
              }
            }
          }
        }
      }
    },
    "/financial/categories/list": {
      "get": {
        "tags": [
          "FinancialCategory"
        ],
        "description": "List financial categories and yours sub categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/categories/view/{id}": {
      "get": {
        "tags": [
          "FinancialCategory"
        ],
        "description": "View financial category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financial category"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/financial/categories/update/{id}": {
      "put": {
        "tags": [
          "FinancialCategory"
        ],
        "description": "Update financial category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Financial category"
              }
            }
          }
        }
      }
    },
    "/financial/categories/{id}": {
      "delete": {
        "tags": [
          "FinancialCategory"
        ],
        "description": "Delete financial category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found financial category"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clientApplications": {
      "get": {
        "tags": [
          "ClientApplications"
        ],
        "description": "List client applications",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ClientApplications"
        ],
        "description": "Create client application",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientApplication"
              }
            }
          }
        }
      }
    },
    "/clientApplications/view/{id}": {
      "get": {
        "tags": [
          "ClientApplications"
        ],
        "description": "View client application",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clientApplications/update/{id}": {
      "put": {
        "tags": [
          "ClientApplications"
        ],
        "description": "Update client application",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientApplication"
              }
            }
          }
        }
      }
    },
    "/clientApplications/{id}": {
      "delete": {
        "tags": [
          "ClientApplications"
        ],
        "description": "Delete client application",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clientApplications/avatar": {
      "patch": {
        "tags": [
          "ClientApplications"
        ],
        "description": "Update avatar client application",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "name": "authorization",
        "scheme": "bearer",
        "in": "header",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "name": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "username": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "email": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "password": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "active": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "remote_acess": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      },
      "OrderProduct": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "number",
            "example": 1
          },
          "product_id": {
            "type": "number",
            "example": 1
          },
          "initial_price": {
            "type": "string",
            "example": "100"
          },
          "single_discount": {
            "type": "string",
            "example": "100"
          },
          "total_discount": {
            "type": "string",
            "example": "100"
          },
          "charged_value": {
            "type": "string",
            "example": "100"
          },
          "cashback_value": {
            "type": "string",
            "example": "100"
          },
          "taxes": {
            "type": "string",
            "example": "100"
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "wrap": {
            "type": "boolean",
            "example": true
          },
          "released": {
            "type": "boolean",
            "example": true
          },
          "cfop": {
            "type": "number",
            "example": 1
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "os": {
            "type": "string",
            "example": "test_os"
          },
          "client_id": {
            "type": "number",
            "example": 1
          },
          "products_value": {
            "type": "string",
            "example": "100"
          },
          "service_value": {
            "type": "string",
            "example": "100"
          },
          "lenses_value": {
            "type": "string",
            "example": "100"
          },
          "charged_value": {
            "type": "string",
            "example": "100"
          },
          "credit_value": {
            "type": "string",
            "example": "100"
          },
          "shipping_method": {
            "type": "string",
            "example": "credit"
          },
          "shipping_value": {
            "type": "string",
            "example": "100"
          },
          "shipping_time": {
            "type": "string",
            "example": "90"
          },
          "payment_method": {
            "type": "string",
            "example": "card"
          },
          "payment_date": {
            "type": "string",
            "example": "2022-04-05"
          },
          "installments": {
            "type": "number",
            "example": 1
          },
          "status": {
            "type": "number",
            "example": 1
          },
          "type": {
            "type": "string",
            "example": "V"
          },
          "profit": {
            "type": "string",
            "example": "N"
          },
          "note": {
            "type": "string",
            "example": "test_note"
          },
          "user_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "registry": {
            "type": "string",
            "example": "string"
          },
          "agency": {
            "type": "string",
            "example": "string"
          },
          "account": {
            "type": "string",
            "example": "string"
          },
          "account_dv": {
            "type": "number",
            "example": 1
          },
          "client_code": {
            "type": "number",
            "example": 1
          },
          "assignor_code": {
            "type": "number",
            "example": 1
          },
          "assignor_code_dv": {
            "type": "number",
            "example": 1
          },
          "document": {
            "type": "string",
            "example": "string"
          },
          "transmission_code": {
            "type": "string",
            "example": "string"
          },
          "currency": {
            "type": "string",
            "example": "string"
          },
          "invoice_value": {
            "type": "number",
            "example": 1
          },
          "delay_fines": {
            "type": "number",
            "example": 1
          },
          "delay_taxes": {
            "type": "number",
            "example": 1
          },
          "message_1": {
            "type": "string",
            "example": "string"
          },
          "message_2": {
            "type": "string",
            "example": "string"
          },
          "message_3": {
            "type": "string",
            "example": "string"
          },
          "instruction_1": {
            "type": "string",
            "example": "string"
          },
          "instruction_2": {
            "type": "string",
            "example": "string"
          },
          "instruction_3": {
            "type": "string",
            "example": "string"
          },
          "user_id": {
            "type": "number",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "string"
          },
          "active": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "Credit": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "number",
            "example": 1
          },
          "order_id": {
            "type": "number",
            "example": 1
          },
          "user_id": {
            "type": "number",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "value": {
            "type": "string",
            "example": "string"
          },
          "date": {
            "type": "string",
            "example": "24/05/2022"
          },
          "used": {
            "type": "string",
            "example": "string"
          },
          "used_at": {
            "type": "string",
            "example": "24/05/2022"
          }
        }
      },
      "FinancialMoviment": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "number",
            "example": 1
          },
          "provider_id": {
            "type": "number",
            "example": 1
          },
          "financial_moviment_type_id": {
            "type": "number",
            "example": 1
          },
          "bank_account_id": {
            "type": "number",
            "example": 1
          },
          "shipment_file_id": {
            "type": "number",
            "example": 1
          },
          "recurrence": {
            "type": "boolean",
            "example": false
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "due_date": {
            "type": "string",
            "example": "24/05/2022"
          },
          "value": {
            "type": "string",
            "example": "string"
          },
          "products_value": {
            "type": "string",
            "example": "string"
          },
          "services_value": {
            "type": "string",
            "example": "string"
          },
          "credits_value": {
            "type": "string",
            "example": "string"
          },
          "fees_fines_value": {
            "type": "string",
            "example": "string"
          },
          "nf_code": {
            "type": "string",
            "example": "string"
          },
          "nf_receipt": {
            "type": "string",
            "example": "string"
          },
          "nf_receipt_date": {
            "type": "string",
            "example": "24/05/2022"
          },
          "nf_issue_date": {
            "type": "string",
            "example": "24/05/2022"
          },
          "nf_cStat_receipt": {
            "type": "string",
            "example": "string"
          },
          "nf_xmotivo_receipt": {
            "type": "string",
            "example": "string"
          },
          "nf_number": {
            "type": "number",
            "example": 1
          },
          "nf_key": {
            "type": "string",
            "example": "string"
          },
          "nf_protocoll": {
            "type": "string",
            "example": "string"
          },
          "nf_protocoll_date": {
            "type": "string",
            "example": "string"
          },
          "nf_protocoll_menssage": {
            "type": "string",
            "example": "string"
          },
          "nf_year_month": {
            "type": "string",
            "example": "string"
          },
          "nf_lot": {
            "type": "string",
            "example": "string"
          },
          "nf_canceled": {
            "type": "string",
            "example": "string"
          },
          "nf_canceled_protocoll": {
            "type": "string",
            "example": "string"
          },
          "nf_canceled_date": {
            "type": "string",
            "example": "string"
          },
          "nf_canceled_reason": {
            "type": "string",
            "example": "string"
          },
          "nf_status": {
            "type": "string",
            "example": "string"
          },
          "nfse_number": {
            "type": "string",
            "example": "string"
          },
          "nfse_verification_code": {
            "type": "string",
            "example": "string"
          },
          "nfse_issue_date": {
            "type": "string",
            "example": "24/05/2022"
          },
          "nfse_rps_number": {
            "type": "number",
            "example": 1
          },
          "nfse_canceled": {
            "type": "string",
            "example": "string"
          },
          "nfse_status": {
            "type": "string",
            "example": "string"
          },
          "finished": {
            "type": "string",
            "example": "string"
          },
          "payment_method": {
            "type": "string",
            "example": "string"
          },
          "invoice_status": {
            "type": "string",
            "example": "string"
          },
          "invoice_registered": {
            "type": "string",
            "example": "string"
          },
          "invoice_bank_downloaded": {
            "type": "string",
            "example": "string"
          },
          "operation_type": {
            "type": "string",
            "example": "string"
          },
          "generated_user_id": {
            "type": "number",
            "example": 1
          },
          "downloaded_user_id": {
            "type": "number",
            "example": 1
          },
          "downloaded_at": {
            "type": "string",
            "example": "24/05/2022"
          }
        }
      },
      "FinancialMovimentOrder": {
        "type": "object",
        "properties": {
          "financial_moviment_id": {
            "type": "number",
            "example": 1
          },
          "order_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "FinancialMovimentType": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "number",
            "example": 1
          },
          "financial_moviment_type_group_id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "name"
          }
        }
      },
      "FinancialMovimentTypeGroup": {
        "type": "object",
        "properties": {
          "operation_type": {
            "type": "string",
            "example": "string"
          },
          "active": {
            "type": "number",
            "example": 0
          },
          "name": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "FiscalSetting": {
        "type": "object",
        "properties": {
          "company_name": {
            "type": "string",
            "example": "string"
          },
          "cnpj": {
            "type": "string",
            "example": "string"
          },
          "city_registration": {
            "type": "string",
            "example": "string"
          },
          "state_registration": {
            "type": "string",
            "example": "string"
          },
          "nfse_env": {
            "type": "boolean",
            "example": false
          },
          "nfse_rps_number": {
            "type": "number",
            "example": 0
          },
          "certified_file": {
            "type": "string",
            "example": "string"
          },
          "certified_validate": {
            "type": "string",
            "example": "24/05/2022"
          },
          "certified_password": {
            "type": "string",
            "example": "string"
          },
          "nf_emission_due": {
            "type": "number",
            "example": 0
          },
          "dir": {
            "type": "number",
            "example": 0
          },
          "invoice_email_copy": {
            "type": "string",
            "example": "string"
          },
          "active": {
            "type": "string",
            "example": "string"
          },
          "street": {
            "type": "string",
            "example": ""
          },
          "number": {
            "type": "string",
            "example": ""
          },
          "complement": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": ""
          },
          "city": {
            "type": "string",
            "example": ""
          },
          "state": {
            "type": "string",
            "example": ""
          },
          "zip_code": {
            "type": "string",
            "example": ""
          },
          "phone": {
            "type": "string",
            "example": ""
          }
        }
      },
      "SaleTable": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "SaleTablePrice": {
        "type": "object",
        "properties": {
          "product_category_id": {
            "type": "number",
            "example": 1
          },
          "table_id": {
            "type": "number",
            "example": 1
          },
          "unit_price": {
            "type": "string",
            "example": "string"
          },
          "wholesale_price": {
            "type": "string",
            "example": "string"
          },
          "user_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "Provider": {
        "type": "object",
        "properties": {
          "company_social_name": {
            "type": "string",
            "example": "test"
          },
          "company_name": {
            "type": "string",
            "example": "test"
          },
          "cnpj": {
            "type": "string",
            "example": "123456789"
          },
          "phone": {
            "type": "string",
            "example": "123456789"
          },
          "mobile": {
            "type": "string",
            "example": "123456789"
          },
          "email": {
            "type": "string",
            "example": "test@test.com"
          },
          "street": {
            "type": "string",
            "example": "test"
          },
          "number": {
            "type": "string",
            "example": "1"
          },
          "complement": {
            "type": "string",
            "example": "test"
          },
          "district": {
            "type": "string",
            "example": "test"
          },
          "zip_code": {
            "type": "string",
            "example": "12345678"
          },
          "city": {
            "type": "string",
            "example": "test"
          },
          "state": {
            "type": "string",
            "example": "BA"
          },
          "ibge": {
            "type": "number",
            "example": 1
          },
          "note": {
            "type": "string",
            "example": "test"
          },
          "active": {
            "type": "string",
            "example": "S"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "cnpj": {
            "type": "string",
            "example": "123456789"
          },
          "company_name": {
            "type": "string",
            "example": "Nome"
          },
          "table_id": {
            "type": "number",
            "example": 1
          },
          "company_social_name": {
            "type": "string",
            "example": "Fantasia"
          },
          "state_registration": {
            "type": "string",
            "example": "123456789"
          },
          "city_registration": {
            "type": "string",
            "example": "123456789"
          },
          "street": {
            "type": "string",
            "example": "Rua belo"
          },
          "number": {
            "type": "string",
            "example": "1"
          },
          "complement": {
            "type": "string",
            "example": ""
          },
          "district": {
            "type": "string",
            "example": "Alvorada"
          },
          "city": {
            "type": "string",
            "example": "Manaus"
          },
          "state": {
            "type": "string",
            "example": "AM"
          },
          "zip_code": {
            "type": "string",
            "example": "12345-678"
          },
          "ibge": {
            "type": "number",
            "example": 1234567
          },
          "phone_1": {
            "type": "string",
            "example": "(11) 11111-1111"
          },
          "phone_2": {
            "type": "string",
            "example": "(11) 11111-1111"
          },
          "mobile": {
            "type": "string",
            "example": "(11) 11111-1111"
          },
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          },
          "note": {
            "type": "string",
            "example": ""
          },
          "shipment_method": {
            "type": "string",
            "example": "M"
          },
          "payment_method": {
            "type": "string",
            "example": "D"
          },
          "active": {
            "type": "string",
            "example": "S"
          },
          "cnpjSearch": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "product_category_id": {
            "type": "number",
            "example": 1
          },
          "side": {
            "type": "string",
            "example": "L"
          },
          "cylindrical": {
            "type": "string",
            "example": "100"
          },
          "spherical": {
            "type": "string",
            "example": "100"
          },
          "price": {
            "type": "string",
            "example": "100"
          },
          "bars_code": {
            "type": "string",
            "example": "1234567891011"
          },
          "active": {
            "type": "string",
            "example": "S"
          }
        }
      },
      "ProductCategory": {
        "type": "object",
        "properties": {
          "parent_id": {
            "type": "number",
            "example": 1
          },
          "user_id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "test"
          },
          "description": {
            "type": "string",
            "example": "test"
          },
          "type": {
            "type": "string",
            "example": "A"
          },
          "ncm": {
            "type": "number",
            "example": 1
          },
          "cst": {
            "type": "number",
            "example": 1
          },
          "cfop": {
            "type": "number",
            "example": 1
          },
          "unit_type_id": {
            "type": "number",
            "example": 1
          },
          "price": {
            "type": "string",
            "example": "100"
          },
          "spherical_start": {
            "type": "number",
            "example": 1
          },
          "spherical_end": {
            "type": "number",
            "example": 1
          },
          "cylindrical_start": {
            "type": "number",
            "example": 1
          },
          "cylindrical_end": {
            "type": "number",
            "example": 1
          }
        }
      },
      "StockMoviment": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "number",
            "example": 1
          },
          "order_id": {
            "type": "number",
            "example": 1
          },
          "financial_moviment_id": {
            "type": "number",
            "example": 1
          },
          "user_id": {
            "type": "number",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "test"
          },
          "type": {
            "type": "string",
            "example": "A"
          },
          "origin": {
            "type": "string",
            "example": "AB"
          },
          "quantity": {
            "type": "number",
            "example": 1
          }
        }
      },
      "UnitType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "test"
          },
          "abbreviation": {
            "type": "string",
            "example": "A"
          }
        }
      },
      "ClientApplication": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "test"
          },
          "email": {
            "type": "string",
            "example": "test@test.com"
          },
          "avatar": {
            "type": "string",
            "example": "image"
          },
          "street": {
            "type": "string",
            "example": "test"
          },
          "cnpj": {
            "type": "string",
            "example": "123456789"
          },
          "number": {
            "type": "string",
            "example": "1"
          },
          "complement": {
            "type": "string",
            "example": "test"
          },
          "district": {
            "type": "string",
            "example": "test"
          },
          "city": {
            "type": "string",
            "example": "test"
          },
          "state": {
            "type": "string",
            "example": "T"
          },
          "zip_code": {
            "type": "string",
            "example": "test"
          },
          "phone": {
            "type": "string",
            "example": "123456789"
          },
          "mobile": {
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "ClientApplicationUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "test"
          },
          "password": {
            "type": "string",
            "example": "123456"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "client_application_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "Download": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Test"
          },
          "description": {
            "type": "string",
            "example": "test"
          },
          "dir": {
            "type": "number",
            "example": 1
          },
          "attachment": {
            "type": "string",
            "example": "file"
          },
          "active": {
            "type": "number",
            "example": 1
          },
          "user_id": {
            "type": "number",
            "example": 1
          }
        }
      },
      "FinancialCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "test"
          },
          "parent_id": {},
          "type": {
            "type": "string",
            "example": "D"
          }
        }
      },
      "FinancialMovimentsUpdate": {
        "type": "object",
        "properties": {
          "financialMoviments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "client_id": {
                  "type": "number",
                  "example": 1
                },
                "provider_id": {
                  "type": "number",
                  "example": 1
                },
                "financial_moviment_type_id": {
                  "type": "number",
                  "example": 1
                },
                "bank_account_id": {
                  "type": "number",
                  "example": 1
                },
                "shipment_file_id": {
                  "type": "number",
                  "example": 1
                },
                "recurrence": {
                  "type": "boolean",
                  "example": false
                },
                "description": {
                  "type": "string",
                  "example": "test"
                },
                "due_date": {
                  "type": "string",
                  "example": "24/05/2022"
                },
                "value": {
                  "type": "string",
                  "example": "1000.00"
                },
                "products_value": {
                  "type": "string",
                  "example": "1000.00"
                },
                "services_value": {
                  "type": "string",
                  "example": "1000.00"
                },
                "credits_value": {
                  "type": "string",
                  "example": "1000.00"
                },
                "fees_fines_value": {
                  "type": "string",
                  "example": "1000.00"
                },
                "nf_number": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": {
        "type": "http",
        "scheme": "Bearer"
      }
    }
  ]
}